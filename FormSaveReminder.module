<?php

/**
 *
 * Form Save Reminder
 *
 * @author Philipp 'Soma' Urlich / philipp at urlich.ch
 * @created 2011/09/09
 *
 * --------------------------------------------------
 *
 * ProcessWire 2.x
 * Copyright (C) 2010 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 * http://www.ryancramer.com
 *
 */

class FormSaveReminder extends WireData implements Module, ConfigurableModule{


	public static function getModuleInfo(){
		return array(
			'title' 	=> 'Form Save Reminder',
			'version' 	=> 105,
			'summary' 	=> 'This module adds a confirm dialog before leaving a page if its content has changed. Prevents losing unsaved data by accident.',
			'href' 		=> 'http://processwire.com/talk/topic/453-formsavereminder/',
			'singular' 	=> true,
			'autoload' 	=> true,
			);
	}

	static protected $defaults = array(
		'onPage' => 1,
		'onTemplate' => 1,
		'onField' => 1,
		'onAccess' => 1,
		'onModule' => 1,
		);

	public function __construct(){
		// set defaults options
		// $this->$key will be set if the module data (json config in db)
		// has saved values, if not we set the default
		foreach(self::$defaults as $key => $value){
			if(!isset($this->$key)) $this->set($key, $value);
		}
	}

	public function init(){


	}

	public function ready(){

		// when editing a page
		if( $this->onPage ){
			if($this->page->process == "ProcessPageEdit"){
				$this->addHookAfter('Process::execute',$this ,'execute');
			}
		}
		// when editing templates, fields, users, roles, permissions, module edit
		if( $this->onTemplate ){
			if($this->page->process == "ProcessTemplate"){
				$this->addHookAfter('Process::executeEdit',$this ,'execute');
			}
		}
		if( $this->onField ){
			if($this->page->process == "ProcessField"){
				$this->addHookAfter('Process::executeEdit',$this ,'execute');
			}
		}
		if( $this->onAccess ){
			if($this->page->process == "ProcessUser"
				|| $this->page->process == "ProcessRole"
				|| $this->page->process == "ProcessPermission"){
				$this->addHookAfter('Process::execute',$this ,'execute');
			}
		}
		if( $this->onModule ){
			// if(strpos($requrl, $this->config->urls->admin . 'module/edit?name=') !== FALSE){
			if($this->page->process == "ProcessModule"){
				$this->addHookAfter('Process::executeEdit',$this ,'execute');
			}
		}


	}

	/**
	 * Hook function to inject script needed to perform the task
	 * @param  HookEvent $event event object variable
	 */
	public function execute(HookEvent $event){
		$conf = $this->getModuleInfo();

		// add config js vars for javascript
		$this->config->js("FormSaveReminder", array(
			"message" => __('Leaving this page will cause any unsaved data to be lost.'),
			));

	    $this->config->scripts->add($this->config->urls->FormSaveReminder . "FormSaveReminder.js?v={$conf['version']}");
	}

	/**
	 * build module configuration fields
	 * @param  array  $data module config array
	 * @return fieldwrapper	fieldwrapper object
	 */
	public static function getModuleConfigInputfields(array $data) {

		$fields = new InputfieldWrapper();

		$data = array_merge(self::$defaults, $data);

		// if(!isset($data['onPage'])) $data['onPage'] = 1; // default to checked
		// if(!isset($data['onTemplate'])) $data['onTemplate'] = 1;
		// if(!isset($data['onField'])) $data['onField'] = 1;
		// if(!isset($data['onAccess'])) $data['onAccess'] = 1;
		// if(!isset($data['onModule'])) $data['onModule'] = 1;

		$field = wire('modules')->get("InputfieldCheckbox");
		$field->attr('name', 'onPage');
		$field->attr('value', 1);
		$field->attr('checked', $data['onPage'] ? 'checked' : '');
		$field->label = "On edit Page?";
		$fields->append($field);

		$field = wire('modules')->get("InputfieldCheckbox");
		$field->attr('name', 'onTemplate');
		$field->attr('value', 1);
		$field->attr('checked', $data['onTemplate'] ? 'checked' : '');
		$field->label = "On edit Template?";
		$fields->append($field);

		$field = wire('modules')->get("InputfieldCheckbox");
		$field->attr('name', 'onField');
		$field->attr('value', 1);
		$field->attr('checked', $data['onField'] ? 'checked' : '');
		$field->label = "On edit Field?";
		$fields->append($field);

		$field = wire('modules')->get("InputfieldCheckbox");
		$field->attr('name', 'onAccess');
		$field->attr('value', 1);
		$field->attr('checked', $data['onAccess'] ? 'checked' : '');
		$field->label = "On edit User, Role, Permission?";
		$fields->append($field);

		$field = wire('modules')->get("InputfieldCheckbox");
		$field->attr('name', 'onModule');
		$field->attr('value', 1);
		$field->attr('checked', $data['onModule'] ? 'checked' : '');
		$field->label = "On edit Module?";
		$fields->append($field);

		return $fields;
	}
}